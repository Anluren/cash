#CXX = clang-6.0
CXX = g++-7.3

PREFIX ?= /usr/local

CXXFLAGS += -fPIC -std=c++17 -O3 -DNDEBUG -I$(CASH_HOME)/include -Wall -Wextra -pedantic
#CXXFLAGS += -fPIC -std=c++17 -O0 -g -I$(CASH_HOME)/include -Wall -Wextra -pedantic

LDFLAGS += -shared -L$(CURDIR)/lib

PROJECT = libcash

# Target
TARGET_DIR = lib

# Source
SOURCE_DIR = ../src

SRCS = utils.cpp \
       platform.cpp \
       system.cpp \
       lnodeimpl.cpp \
       ioimpl.cpp \
       proxyimpl.cpp \
       cdimpl.cpp \
       litimpl.cpp \
       regimpl.cpp \
       memimpl.cpp \
       selectimpl.cpp \
       opimpl.cpp \
       bindimpl.cpp \
       assertimpl.cpp \
       timeimpl.cpp \
       printimpl.cpp \
       udfimpl.cpp \
       lnode.cpp \
       logic.cpp \
       context.cpp \
       compile.cpp \
       simref.cpp \
       simjit.cpp \
       deviceimpl.cpp \
       simulatorimpl.cpp \
       tracerimpl.cpp \
       verilogwriter.cpp \
       firrtlwriter.cpp \
       eda/altera/avalon_sim.cpp

OBJS = $(SRCS:.cpp=.o)
#$(info objs=$(OBJS))

.PHONY: all

all: $(TARGET_DIR)/$(PROJECT).so

$(TARGET_DIR)/$(PROJECT).so: $(OBJS)
	@mkdir -p $(dir $@)
	$(CXX) $^ $(LDFLAGS) -o $@

$(OBJS): %.o: $(SOURCE_DIR)/%.cpp
	@mkdir -p $(dir $@)
	$(CXX) $(CXXFLAGS) -c $< -o $@
	
.depend: $(addsuffix .depend,$(SRCS:.cpp=))

clean-depend:
	rm -f .depend

%.depend: clean-depend
	$(CXX) $(CXXFLAGS) -MM -MT $*.o $(SOURCE_DIR)/$*.cpp >> .depend

clean:
	rm -rf $(OBJS) *.gcda *.gcno .depend *~ *\# $(TARGET_DIR)

ifneq ($(MAKECMDGOALS),clean)
    -include .depend
endif
