language: cpp
compiler: gcc

dist: trusty
addons:
    apt:
        sources:
        - ubuntu-toolchain-r-test
        packages:
        - iverilog
        - lcov

before_install:
  # C++17
  - sudo add-apt-repository --yes ppa:ubuntu-toolchain-r/test
  - sudo apt-get update

install: 
  # C++17
  - sudo apt-get install gcc-7 g++-7
  - sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-7 60 --slave /usr/bin/g++ g++ /usr/bin/g++-7
  # valgrin
  - sudo apt-get install valgrind
  # texinfo 
  - sudo apt-get install texinfo

script: 
  # patch libjit
  - scripts/libjit_patch.sh
  # Build Release project
  - mkdir -p build_rel
  - pushd build_rel
  - cmake -DCMAKE_BUILD_TYPE=Release ..
  - make -j8 all
  - make test
  - CASH_CFLAGS=256 make test
  - CFLAGS=-DBLOCK_SIZE=2 make -j8 clean all test
  - CASH_CFLAGS=256 make test
  - CFLAGS=-DBLOCK_SIZE=4 make -j8 clean all test
  - CASH_CFLAGS=256 make test
  - valgrind bin/testsuite
  - CASH_CFLAGS=256 valgrind bin/testsuite
  - popd
  # Build Debug project
  - export CASH_DEBUG_LEVEL=2
  - export CASH_CFLAGS=15
  - mkdir -p build_dbg
  - pushd build_dbg
  - cmake -DCMAKE_BUILD_TYPE=Debug -DCODECOV=ON ..
  - make -j8 all 
  - make test
  - CASH_CFLAGS=271 make test
  - CFLAGS=-DBLOCK_SIZE=2 make -j8 clean all test
  - CASH_CFLAGS=271 make test
  - CFLAGS=-DBLOCK_SIZE=4 make -j8 clean all test
  - CASH_CFLAGS=271 make test
  
after_success:
  # Gather code coverage
  - lcov --directory . --capture --output-file coverage.info # capture trace  
  - lcov --list coverage.info # trace report
  # Upload coverage report
  - bash <(curl -s https://codecov.io/bash)
